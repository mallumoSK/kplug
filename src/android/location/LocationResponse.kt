package tk.mallumo.cordova.kplug.location

import android.content.Context
import android.content.Context.BATTERY_SERVICE
import android.location.Location
import android.net.wifi.WifiManager
import android.os.BatteryManager

data class LocationResponse(
        var identifier: String = "",
        val state: State,
        val provider: String = "X",
        val accuracy: Float = 0.0f,
        val lat: Double = 0.0,
        val lon: Double = 0.0,
        val altitude: Double = 0.0,
        val dt: Long = System.currentTimeMillis(), //in case state of NEW_LOCATION is datetime generated by location provider
        val bearing: Float = 0.0f,
        val speed: Float = 0.0f,
        val wifi: String = "", // name of currently connected wifi
        val battery: Int = -1, // mobile battery state (0-100)
        val distanceM: Long = 0) { // distance in meters from last position

    enum class State {
        IDLE, // startup point
        NEW_LOCATION, // new location
        PROVIDER_ENABLED, // user enable location provider (GPS/NETWORK/OTHER)
        PROVIDER_DISABLED // user DISABLE location provider (GPS/NETWORK/OTHER)
    }
}

fun Location.ofLocationResponse(context: Context, state: LocationResponse.State) = LocationResponse(
        state = state,
        accuracy = accuracy,
        lat = latitude,
        lon = longitude,
        dt = time,
        altitude = altitude,
        bearing = bearing,
        speed = speed,
        provider = provider ?: "X",
        wifi = getAndroidWifiName(context),
        battery = getAndroidBatteryState(context),
        distanceM = getDistanceFromLastPosition(context, this))

fun getDistanceFromLastPosition(context: Context, location: Location): Long = LocationDatabase.get(context)
        .last()?.let {
            val oldLoc = Location("x").apply {
                latitude = it.lat
                longitude = it.lon
            }
            oldLoc.distanceTo(location).toLong()
        } ?: -1

fun getAndroidBatteryState(context: Context): Int {
    val bm = context.applicationContext.getSystemService(BATTERY_SERVICE) as BatteryManager
    return bm.getIntProperty(BatteryManager.BATTERY_PROPERTY_CAPACITY)
}

fun getAndroidWifiName(context: Context): String {
    val manager = context.applicationContext.getSystemService(Context.WIFI_SERVICE) as WifiManager
    return manager.connectionInfo.ssid ?: ""
}
